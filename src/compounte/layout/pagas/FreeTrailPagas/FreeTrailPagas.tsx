import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import emailjs from "emailjs-com";
import { FaClipboardList, FaChalkboardTeacher, FaCheckCircle, FaBookOpen } from "react-icons/fa"; // FaBookOpen added for About Us

// ---- Steps Data (for the responsive grid) ----
const steps = [
    {
        id: 1,
        icon: <FaClipboardList className="text-blue-600 text-4xl mb-3" />,
        title: "ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзБржиред",
        desc: "рж╕рж╣ржЬ ржХржпрж╝рзЗржХржЯрж┐ ржзрж╛ржкрзЗ ржЖржкржирж╛рж░ ржирж╛ржо, ржжрзЗрж╢ ржПржмржВ рж╣рзЛржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк ржиржорзНржмрж░ ржжрж┐ржпрж╝рзЗ ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзБржиред",
    },
    {
        id: 2,
        icon: <FaChalkboardTeacher className="text-green-600 text-4xl mb-3" />,
        title: "ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЯрзНрж░рж╛ржпрж╝рж╛рж▓ ржХрзНрж▓рж╛рж╕рзЗрж░ ржЕржнрж┐ржЬрзНржЮрждрж╛ ржирж┐ржи!",
        desc: "ржЖржорж╛ржжрзЗрж░ ржЕржнрж┐ржЬрзНржЮ рж╢рж┐ржХрзНрж╖ржХ-рж╢рж┐ржХрзНрж╖рж┐ржХрж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржПржХржжрж┐ржирзЗрж░ ржХрзНрж▓рж╛рж╕рзЗ ржЕржВрж╢ ржирж┐ржи ржПржмржВ ржкрж╛рж░рзНржержХрзНржп ржЕржирзБржнржм ржХрж░рзБржиред",
    },
    {
        id: 3,
        icon: <FaCheckCircle className="text-yellow-600 text-4xl mb-3" />,
        title: "рждрж╛рж░ржкрж░ ржЖржкржирж┐ ржЖржорж╛ржжрзЗрж░ ржмрзЗржЫрзЗ ржирж┐ржи",
        desc: "ржЯрзНрж░рж╛ржпрж╝рж╛рж▓ ржХрзНрж▓рж╛рж╕рзЗ рж╕ржирзНрждрзБрж╖рзНржЯ рж╣рж▓рзЗ рж╕рж╣ржЬрзЗржЗ ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржХрзЛрж░рзНрж╕рзЗ ржнрж░рзНрждрж┐ рж╣ржпрж╝рзЗ ржпрж╛ржиред",
    },
];

// ---- Country List (Shortened for demonstration, use full list if needed) ----
const countries = ["Bangladesh", "India", "Pakistan", "Saudi Arabia", "United Kingdom (UK)", "United States (US)", "Malaysia", "Canada", "Qatar", "UAE", "Germany", "Australia", "South Africa"];

const FreeTrialJoinForm = () => {
    const [formData, setFormData] = useState({
        name: "",
        gender: "",
        whatsapp: "",
        country: "",
        facebook: "",
    });
    const [submitted, setSubmitted] = useState(false);
    const [loading, setLoading] = useState(false);
    const [submitError, setSubmitError] = useState(false);

    // Handle input change
    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
    };

    // Handle submit
    interface EmailJSError {
        text: string;
    }

    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        setLoading(true);
        setSubmitError(false);
        setSubmitted(false);

        // тЪая╕П REMINDER: Replace with your actual EmailJS credentials
        const SERVICE_ID: string = "YOUR_SERVICE_ID";
        const TEMPLATE_ID: string = "YOUR_TEMPLATE_ID";
        const PUBLIC_KEY: string = "YOUR_PUBLIC_KEY";

        emailjs
            .send(SERVICE_ID, TEMPLATE_ID, formData, PUBLIC_KEY)
            .then(
                () => {
                    setSubmitted(true);
                    setFormData({ name: "", gender: "", whatsapp: "", country: "", facebook: "" });
                    setLoading(false);
                    setTimeout(() => setSubmitted(false), 4000);
                },
                (error: EmailJSError) => {
                    console.error("EmailJS Error:", error);
                    setSubmitError(true);
                    setLoading(false);
                    setTimeout(() => setSubmitError(false), 4000);
                }
            );
    };

    return (
        <>
            {/* ------------------ FORM SECTION ------------------ */}
            <section className="py-16 px-4 sm:px-6 md:px-12 bg-gradient-to-r from-green-50 via-white to-green-100">
                <div className="max-w-6xl mx-auto">
                    {/* Header */}
                    <motion.div
                        initial={{ opacity: 0, y: -40 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        viewport={{ once: true }}
                        transition={{ duration: 0.8 }}
                        className="text-center mb-10"
                    >
                        <h2 className="text-3xl sm:text-4xl font-extrabold text-green-800 mb-4">
                            ржлрзНрж░рж┐ ржЯрзНрж░рж╛ржпрж╝рж╛рж▓ ржХрзНрж▓рж╛рж╕рзЗ ржпрзБржХрзНржд рж╣рждрзЗ ржирж┐ржЪрзЗрж░ ржжрзЗржпрж╝рж╛ рж╕ржорзНржкрзВрж░рзНржг ржлрж░ржоржЯрж┐ ржкрзВрж░ржг ржХрж░рзБржи
                        </h2>
                        <p className="text-gray-700 text-base sm:text-lg leading-relaxed max-w-3xl mx-auto">
                            ржЙржЪрзНржЪржорж╛ржирзЗрж░ рж╢рж┐ржХрзНрж╖рж╛ржжрж╛ржирзЗрж░ ржЕржнрж┐ржЬрзНржЮрждрж╛ ржЕрж░рзНржЬржи ржХрж░рзБржи ржПржмржВ ржжрзЗржЦрзБржи ржХрж┐ржнрж╛ржмрзЗ ржЖржорж╛ржжрзЗрж░ ржХрзЛрж░рзНрж╕ржЧрзБрж▓рж┐ ржЖржкржирж╛рж░ ржЗрж╕рж▓рж╛ржорзЗрж░ ржмрзЛржзржЧржорзНржпрждрж╛ ржПржмржВ ржЕржирзБрж╢рзАрж▓ржиржХрзЗ рж╕ржорзГржжрзНржз ржХрж░рждрзЗ ржкрж╛рж░рзЗред
                        </p>
                    </motion.div>

                    <div className="grid md:grid-cols-2 gap-10 items-start">
                        {/* Left Info - Combined Intro & About Us */}
                        <motion.div
                            initial={{ opacity: 0, x: -50 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ duration: 0.8, delay: 0.2 }}
                            className="p-6 md:p-8 bg-white rounded-xl shadow-lg border border-green-200"
                        >
                            <h3 className="text-2xl font-bold text-green-700 mb-4 border-b pb-2 border-green-300">
                                ржПржХржжрж┐ржирзЗрж░ ржлрзНрж░рж┐ ржЯрзНрж░рж╛ржпрж╝рж╛рж▓ ржХрзНрж▓рж╛рж╕! ЁЯОЙ
                            </h3>
                            <p className="text-gray-700 mb-6 leading-relaxed">
                                ржпрзЗржЦрж╛ржирзЗ ржЖржкржирж┐ ржирж┐ржЬрзЗржЗ ржЕржирзБржнржм ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи тАФ **ржЖржорж╛ржжрзЗрж░ ржХрзНрж▓рж╛рж╕рзЗрж░ ржорж╛ржи, ржЕржнрж┐ржЬрзНржЮ рж╢рж┐ржХрзНрж╖ржХ-рж╢рж┐ржХрзНрж╖рж┐ржХрж╛рж░ ржЖржирзНрждрж░рж┐ржХрждрж╛, ржЖрж░ ржПржХ ржоржирзЛржорзБржЧрзНржзржХрж░ рж╢рж┐ржХрзНрж╖рж╛рж░ ржкрж░рж┐ржмрзЗрж╢ред** ржирж┐ржЬ ржЪрзЛржЦрзЗ ржжрзЗржЦрзЗ ржирж┐ржи ржХрзЗржи рж╢ржд рж╢ржд рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржЖржорж╛ржжрзЗрж░ рж╕ржЩрзНржЧрзЗ ржерзЗржХрзЗ ржирж╛ржорж╛ржЬ ржУ ржЗрж╕рж▓рж╛ржорзА рж╢рж┐ржХрзНрж╖рж╛ ржЕрж░рзНржЬржи ржХрж░ржЫрзЗ тАФ рж╕ржорзНржкрзВрж░рзНржг ржЖрж╕рзНржерж╛рж░ рж╕ржЩрзНржЧрзЗ! ЁЯМЩтЬи
                            </p>

                            <div className="bg-green-50 p-5 rounded-xl border border-green-200">
                                <h4 className="font-semibold text-xl text-green-900 mb-3 flex items-center">
                                    <FaBookOpen className="text-green-700 mr-2" />
                                    About Us
                                </h4>
                                <p className="text-gray-700 text-sm leading-relaxed">
                                    **Madrasatu Nuurul тАШIlm** ржПржХржЯрж┐ ржмрж┐рж╕рзНрждрзГржд ржЕржирж▓рж╛ржЗржи ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо ржпрж╛ рж╕ржХрж▓ ржмржпрж╝рж╕ ржПржмржВ рж▓рж┐ржЩрзНржЧрзЗрж░ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржЙржЪрзНржЪржорж╛ржирзЗрж░ ржЗрж╕рж▓рж╛ржорж┐ржХ рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗред ржЖржорж╛ржжрзЗрж░ ржХрзЛрж░рзНрж╕ржЧрзБрж▓рж┐рждрзЗ ржХрзБрж░ржЖржи ржЕржзрзНржпржпрж╝ржи, рж╣рж╛ржжрж┐рж╕, ржлрж┐ржХрж╛рж╣ ржПржмржВ ржЗрж╕рж▓рж╛ржорж┐ржХ ржЗрждрж┐рж╣рж╛рж╕ рж╕рж╣ ржмрж┐рж╕рзНрждрзГржд ржмрж┐рж╖ржпрж╝ ржЕржирзНрждрж░рзНржнрзБржХрзНржд рж░ржпрж╝рзЗржЫрзЗ, ржпрж╛ ржЕржнрж┐ржЬрзНржЮ **рж╣рж╛ржлрж┐ржЬ, рж╣рж╛ржлрж┐ржЬрж╛, ржорзБтАЩржЖрж▓рзНрж▓рж┐ржо ржПржмржВ ржорзБтАЩржЖрж▓рзНрж▓рж┐ржорж╛** ржжрзНржмрж╛рж░рж╛ рж╢рзЗржЦрж╛ржирзЛ рж╣ржпрж╝ред ржЖржорж░рж╛ ржЗржирзНржЯрж╛рж░рзЗржХрзНржЯрж┐ржн ржПржмржВ ржЖржХрж░рзНрж╖ржгрзАржпрж╝ рж╢рзЗржЦрж╛рж░ ржЕржнрж┐ржЬрзНржЮрждрж╛рж░ ржЙржкрж░ ржЬрзЛрж░ ржжрж┐ржЗ, ржпрж╛ ржЖржкржирж╛рж░ рж╕ржоржпрж╝рж╕рзВржЪрзАрж░ рж╕рж╛ржерзЗ рж╕рж╛ржоржЮрзНржЬрж╕рзНржпржкрзВрж░рзНржг ржиржоржирзАржпрж╝рждрж╛ ржПржмржВ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ржпрзЛржЧрзНржпрждрж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗред ржПржХржЯрж┐ ржЕржирзНрждрж░рзНржнрзБржХрзНрждрж┐ржорзВрж▓ржХ ржПржмржВ рж╕рж╣рж╛ржпрж╝ржХ ржкрж░рж┐ржмрзЗрж╢рзЗ ржЗрж╕рж▓рж╛ржо рж╕ржорзНржкрж░рзНржХрзЗ ржЖржкржирж╛рж░ ржмрзЛржзржЧржорзНржпрждрж╛ ржЖрж░ржУ ржЧржнрзАрж░ ржХрж░рждрзЗ ржЖржорж╛ржжрзЗрж░ ржкрзНрж░рж╛ржгржмржирзНржд рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗ ржпрзЛржЧржжрж╛ржи ржХрж░рзБржиред ржЖржорж╛ржжрзЗрж░ рж╢рж┐ржХрзНрж╖рж╛рж░ ржорж╛ржи рж╕рж░рж╛рж╕рж░рж┐ ржЕржнрж┐ржЬрзНржЮрждрж╛ ржЕрж░рзНржЬржирзЗрж░ ржЬржирзНржп ржЖржЬржЗ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЯрзНрж░рж╛ржпрж╝рж╛рж▓ ржХрзНрж▓рж╛рж╕рзЗ ржпрзЛржЧржжрж╛ржи ржХрж░рзБржиред
                                </p>
                            </div>
                        </motion.div>

                        {/* Right Section - Form */}
                        <motion.form
                            onSubmit={handleSubmit}
                            initial={{ opacity: 0, x: 50 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ duration: 0.8, delay: 0.4 }}
                            className="bg-white p-6 sm:p-8 rounded-xl shadow-2xl border-t-4 border-green-600 relative"
                        >
                            {/* Form Fields */}
                            {/* Name */}
                            <div className="mb-4">
                                <label htmlFor="name" className="block text-gray-700 font-medium mb-1">ржЖржкржирж╛рж░ ржирж╛ржо <span className="text-red-500">*</span></label>
                                <input type="text" id="name" name="name" value={formData.name} onChange={handleChange} required placeholder="ржЖржкржирж╛рж░ ржкрзБрж░рзЛ ржирж╛ржо рж▓рж┐ржЦрзБржи" className="w-full border rounded-md p-3 focus:ring-green-500 focus:border-green-500 transition duration-150" />
                            </div>

                            {/* WhatsApp */}
                            <div className="mb-4">
                                <label htmlFor="whatsapp" className="block text-gray-700 font-medium mb-1">рж╣рзЛржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк ржирж╛ржорзНржмрж╛рж░ <span className="text-red-500">*</span></label>
                                <input type="text" id="whatsapp" name="whatsapp" value={formData.whatsapp} onChange={handleChange} required placeholder="ржжрзЗрж╢рзЗрж░ ржХрзЛржб рж╕рж╣ рж╣рзЛржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк ржирж╛ржорзНржмрж╛рж░ ржжрж┐ржи (ржпрзЗржоржи: +88017...)" className="w-full border rounded-md p-3 focus:ring-green-500 focus:border-green-500 transition duration-150" />
                            </div>

                            {/* Gender */}
                            <div className="mb-4">
                                <label htmlFor="gender" className="block text-gray-700 font-medium mb-1">Gender <span className="text-red-500">*</span></label>
                                <select id="gender" name="gender" value={formData.gender} onChange={handleChange} required className="w-full border rounded-md p-3 bg-white focus:ring-green-500 focus:border-green-500 transition duration-150 appearance-none">
                                    <option value="">-- ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи --</option>
                                    <option value="Male">ржкрзБрж░рзБрж╖</option>
                                    <option value="Female">ржорж╣рж┐рж▓рж╛</option>
                                    <option value="Other">ржЕржирзНржпрж╛ржирзНржп</option>
                                </select>
                            </div>

                            {/* Country */}
                            <div className="mb-4">
                                <label htmlFor="country" className="block text-gray-700 font-medium mb-1">ржжрзЗрж╢ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи <span className="text-red-500">*</span></label>
                                <select id="country" name="country" value={formData.country} onChange={handleChange} required className="w-full border rounded-md p-3 bg-white focus:ring-green-500 focus:border-green-500 transition duration-150 appearance-none">
                                    <option value="">-- ржЖржкржирж╛рж░ ржжрзЗрж╢ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи --</option>
                                    {countries.map((c) => (<option key={c} value={c}>{c}</option>))}
                                </select>
                            </div>

                            {/* Facebook */}
                            <div className="mb-6">
                                <label htmlFor="facebook" className="block text-gray-700 font-medium mb-1">ржлрзЗрж╕ржмрзБржХ рж▓рж┐ржВржХ (ржРржЪрзНржЫрж┐ржХ)</label>
                                <input type="text" id="facebook" name="facebook" value={formData.facebook} onChange={handleChange} placeholder="ржлрзЗрж╕ржмрзБржХ ржкрзНрж░рзЛржлрж╛ржЗрж▓ рж▓рж┐ржВржХ" className="w-full border rounded-md p-3 focus:ring-green-500 focus:border-green-500 transition duration-150" />
                            </div>

                            {/* Submit Button */}
                            <motion.button whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }} type="submit" disabled={loading} className={`w-full font-bold py-3 px-6 rounded-lg shadow-xl transition-all duration-300 flex items-center justify-center ${loading ? "bg-gray-400 cursor-not-allowed" : "bg-green-700 hover:bg-green-800 text-white"}`}>
                                {loading ? (
                                    <>
                                        <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle><path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>
                                        ржкрж╛ржарж╛ржирзЛ рж╣ржЪрзНржЫрзЗ...
                                    </>
                                ) : (
                                    "ржлрж░рзНржоржЯрж┐ ржЬржорж╛ ржжрж┐ржи ржПржмржВ ржЯрзНрж░рж╛ржпрж╝рж╛рж▓ ржХрзНрж▓рж╛рж╕рзЗ ржпрзБржХрзНржд рж╣ржи"
                                )}
                            </motion.button>

                            {/* Status Toast */}
                            <AnimatePresence>
                                {submitted && (<motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -20 }} transition={{ duration: 0.5 }} className="absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-green-600 text-white px-4 py-2 rounded-md shadow-xl font-medium whitespace-nowrap">тЬЕ ржзржирзНржпржмрж╛ржж! ржЖржкржирж╛рж░ ржлрж░рзНржо рж╕ржлрж▓ржнрж╛ржмрзЗ ржЬржорж╛ рж╣ржпрж╝рзЗржЫрзЗред</motion.div>)}
                                {submitError && (<motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -20 }} transition={{ duration: 0.5 }} className="absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-xl font-medium whitespace-nowrap">тЭМ ржжрзБржГржЦрж┐ржд, ржлрж░рзНржорзЗ ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред</motion.div>)}
                            </AnimatePresence>
                        </motion.form>
                    </div>
                </div>
            </section>

            {/* ------------------ STEPS SECTION ------------------ */}
            <section className="bg-gradient-to-r from-blue-50 via-white to-indigo-50 py-20 px-4 sm:px-6 md:px-12 text-center">
                <motion.h2
                    className="text-3xl sm:text-4xl md:text-4xl font-extrabold text-green-800 mb-12"
                    initial={{ opacity: 0, y: -30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.7 }}
                >
                    ржЖржкржирж╛рж░ рж╢рзЗржЦрж╛рж░ ржпрж╛рждрзНрж░рж╛ ржорж╛рждрзНрж░ рзйржЯрж┐ рж╕рж╣ржЬ ржзрж╛ржкрзЗ!
                </motion.h2>

                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
                    {steps.map((step, index) => (
                        <motion.div
                            key={step.id}
                            className="bg-white p-8 rounded-2xl shadow-lg border-t-4 border-indigo-400 hover:shadow-2xl transition-shadow duration-300 flex flex-col items-center"
                            initial={{ opacity: 0, scale: 0.8 }}
                            whileInView={{ opacity: 1, scale: 1 }}
                            viewport={{ once: true, amount: 0.5 }}
                            transition={{ duration: 0.6, delay: index * 0.2 }}
                        >
                            <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4 border-4 border-white shadow-md">
                                {step.icon}
                            </div>
                            <h3 className="text-2xl font-bold text-gray-800 mb-3">{step.title}</h3>
                            <p className="text-gray-600 text-base">{step.desc}</p>
                        </motion.div>
                    ))}
                </div>
            </section>
        </>
    );
};

export default FreeTrialJoinForm;