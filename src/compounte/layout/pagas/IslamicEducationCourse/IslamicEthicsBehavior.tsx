import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { BookOpen, Zap, Users, Feather, ScrollText, GitBranch, X, CheckCircle } from "lucide-react";

// Islamic Ethics & Behavior Guide (Bangla)
// Save as: src/components/IslamicEthicsBehavior.jsx
// Requirements: TailwindCSS, framer-motion, lucide-react (optional icons)

const sections = [
    { id: 'overview', title: 'рж╕рж╛рж░рж╛ржВрж╢ (ржнрзВржорж┐ржХрж╛)', icon: BookOpen, desc: 'ржЗрж╕рж▓рж╛ржорж┐ржХ ржирзИрждрж┐ржХрждрж╛ ржУ ржЖржЪрж░ржг тАФ рж╕рж╛ржХрзНрж╖рзНржп, рж╕рждрждрж╛, ржЗржирж╕рж╛ржл ржУ рж╕ржжрзНржнрж╛ржмржкрзНрж░ржмржг ржЖржЪрж░ржг ржХрж┐ржнрж╛ржмрзЗ ржжрзИржиржирзНржжрж┐ржи ржЬрзАржмржирзЗ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рждрзЗ рж╣ржпрж╝ред' },
    { id: 'core', title: 'ржорзВрж▓ ржирзИрждрж┐ржХ ржЧрзБржгрж╛ржмрж▓рзА', icon: Zap, desc: 'рж╕рзОржХрж░рзНржо, ржЗржорж╛ржи, ржзрзИрж░рзНржп, ржХрзГрждржЬрзНржЮрждрж╛, рж╕рж╣ржорж░рзНржорж┐рждрж╛, ржХрзНрж╖ржорж╛рж╢рзАрж▓рждрж╛ ржЗрждрзНржпрж╛ржжрж┐ рж╕ржорзНржкрж░рзНржХрзЗ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрзНржпрж╛ржЦрзНржпрж╛ред' },
    { id: 'daily', title: 'ржжрзИржиржирзНржжрж┐ржи ржЕржнрзНржпрж╛рж╕', icon: Feather, desc: 'ржнрж╛рж╖рж╛, рж╕ржоржпрж╝ржирж┐рж╖рзНржарж╛, рж╕рзОржЪрж░рзНржЪрж╛, ржорж┐ржерзНржпрж╛ржЪрж╛рж░ ржПржбрж╝рж╛ржирзЛтАФржкрзНрж░рзНржпрж╛ржХржЯрж┐ржХрзНржпрж╛рж▓ ржЯрж┐ржкрж╕ред' },
    { id: 'social', title: 'ржЖржирзНрждржГрж╕рж╛ржорж╛ржЬрж┐ржХ ржЖржЪрж░ржг', icon: Users, desc: 'ржЧрзГрж╣рж╕рзНржерж╛рж▓рж┐рждрзЗ, ржХрж░рзНржоржХрзНрж╖рзЗрждрзНрж░рзЗ ржУ рж╕рж╛ржорж╛ржЬрж┐ржХ ржкрзЗрж╢рж╛ржпрж╝ рж╕рзМрж╣рж╛рж░рзНржжрзНржп ржмржЬрж╛ржпрж╝ рж░рж╛ржЦрж╛рж░ ржзрж░ржиред' },
    { id: 'parenting', title: 'рж╢рж┐рж╢рзБ ржУ рждрж░рзБржгржжрзЗрж░ ржирзИрждрж┐ржХ рж╢рж┐ржХрзНрж╖рж╛', icon: GitBranch, desc: 'ржиржорзБржирж╛-ржорж╛рж╣рж┐рж░рж╛ ржжрзЗржУржпрж╝рж╛, ржХржерзЛржкржХржержи, ржоржбрзЗрж▓рж┐ржВ ржЖржЪрж░ржгред' },
    { id: 'resources', title: 'рж╕ржВржХрж░ржг ржУ рж╕ржорзНржкржж', icon: ScrollText, desc: 'ржЖрж░ржУ ржкржбрж╝рж╛рж░ ржЬржирзНржп ржмржЗ, ржЕржбрж┐ржУ, ржнрж┐ржбрж┐ржУ рж▓рж┐ржВржХтАФрж╕рзНржерж╛ржирзАржпрж╝ ржЖрж▓рзЗржо/ржЗржорж╛ржоржХрзЗ ржЕржирзБрж╕рж░ржг ржХрж░рзБржиред' }
];

const virtues = [
    { id: 'sincerity', name: 'ржирж┐ржпрж╝рзНржпрж╛рж▓рж╛ (рж╕рждрзНржпржирж┐рж╖рзНржарж╛)', note: 'ржХрж╛ржЬрзЗ ржУ ржХржерж╛ржпрж╝ ржЖржирзНрждрж░рж┐ржХрждрж╛' },
    { id: 'truth', name: 'рж╕рждрзНржпржмрж╛ржгрзА', note: 'ржорж┐ржерзНржпрж╛ ржПржбрж╝рж╛ржирзЛ; ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ ржкрж╛рж▓ржи' },
    { id: 'justice', name: 'ржирж┐рж╖рзНржкржХрзНрж╖рждрж╛ ржУ ржЗржирж╕рж╛ржл', note: 'рж╕рж╛ржорзНржп ржУ ржирзНржпрж╛ржпрж╝ржкрж░рж╛ржпрж╝ржгрждрж╛' },
    { id: 'compassion', name: 'ржжржпрж╝рж╛ ржУ рж╕рж╣ржорж░рзНржорж┐рждрж╛', note: 'ржжрзБ:ржЦрзЗ рж╕рж╣рж╛ржирзБржнрзВрждрж┐ ржжрзЗржЦрж╛ржирзЛ' },
    { id: 'gratitude', name: 'ржХрзГрждржЬрзНржЮрждрж╛', note: 'ржЖрж▓рж╣рж╛ржоржжрзБрж▓рж┐рж▓рзНрж▓рж╛рж╣ ржоржирзЛржнрж╛ржм' }
];

// Quiz data (added correct answers for clarity)
const quizData = [
    {
        q: "Q1: ржЖржкржирж┐ ржпржжрж┐ ржХрзЗржЙ ржнрзБрж▓ рждржерзНржп ржжрзЗржпрж╝, ржЖржкржирж┐ ржХрзЗржоржи ржЖржЪрж░ржг ржХрж░ржмрзЗржи?",
        options: [
            { id: 'a', text: 'ржЕржмрж╣рзЗрж▓рж╛рж░ рж╕рж╛ржерзЗ ржЖрж▓рзЛржЪржирж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржпрж╛ржУржпрж╝рж╛' },
            { id: 'b', text: 'ржиржорзНрж░ржнрж╛ржмрзЗ рж╕ржВрж╢рзЛржзржи ржХрж░рж╛', isCorrect: true },
        ]
    },
    {
        q: "Q2: ржЖржкржирж┐ ржХрж╛ржЙржХрзЗ ржЖржШрж╛ржд ржХрж░рж▓рзЗ ржХрзА ржХрж░ржмрзЗржи?",
        options: [
            { id: 'a', text: 'ржХрзНрж╖ржорж╛ ржЪрзЗржпрж╝рзЗ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛', isCorrect: true },
            { id: 'b', text: 'ржХрж┐ржЫрзБ ржирж╛ ржмрж▓рж╛, ржнрж╛ржи ржХрж░рж╛ ржПржЯрж┐ ржШржЯрзЗржирж┐' },
        ]
    }
];

export default function IslamicEthicsBehavior() {
    const [active, setActive] = useState('overview');
    const [quizOpen, setQuizOpen] = useState(false);
    const [answers, setAnswers] = useState<{ [key: string]: string }>({});
    const [score, setScore] = useState<number | null>(null);

    interface Answers {
        [key: string]: string;
    }

    const handleAnswer = (qIndex: number, val: string): void =>
        setAnswers((a: Answers) => ({ ...a, [`q${qIndex + 1}`]: val }));

    const submitQuiz = () => {
        let s = 0;
        quizData.forEach((question, index) => {
            const userAnswer = answers[`q${index + 1}`];
            const correctOption = question.options.find(opt => opt.isCorrect);
            if (userAnswer === correctOption?.id) {
                s += 1;
            }
        });
        setScore(s);
    };

    const resetQuiz = () => {
        setAnswers({});
        setScore(null);
    }

    // Tailwind CSS Class Constants
    const buttonClass = "flex items-center gap-1 px-3 py-1 border border-slate-300 rounded-md text-sm hover:bg-slate-100 transition duration-200";
    const activeNavClass = 'bg-blue-600 text-white font-bold hover:bg-blue-700 shadow-md';
    const inactiveNavClass = 'hover:bg-slate-100 text-slate-700';
    const contentBoxClass = 'p-3 border rounded-lg bg-white shadow-sm';
    const quizButtonClass = "px-3 py-1 border rounded-md transition duration-200";

    return (
        <div className="max-w-4xl mx-auto my-6 p-4 bg-gray-50 rounded-xl shadow-lg">
            <header className="flex flex-col md:flex-row md:items-center md:justify-between mb-6 gap-3">
                <div>
                    <h1 className="text-2xl md:text-3xl font-extrabold text-gray-900">ржЗрж╕рж▓рж╛ржорж┐ржХ ржирзИрждрж┐ржХрждрж╛ ржУ ржЖржЪрж░ржг ЁЯХМ</h1>
                    <p className="text-sm text-slate-500">ржжрзИржиржирзНржжрж┐ржи ржЬрзАржмржирзЗ ржЗрж╕рж▓рж╛ржорзА ржирзИрждрж┐ржХрждрж╛рж░ ржЕржирзБржмрж░рзНрждржитАФрж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржУ ржкрзНрж░рзНржпрж╛ржХржЯрж┐ржХрзНржпрж╛рж▓ ржЯрж┐ржкрж╕</p>
                </div>

                <div className="flex flex-wrap gap-2 items-center">
                    <button onClick={() => window.print()} className={buttonClass}>
                        <ScrollText size={16} />
                        ржкрзНрж░рж┐ржирзНржЯ
                    </button>
                    <button onClick={() => navigator.share ? navigator.share({ title: 'ржЗрж╕рж▓рж╛ржорж┐ржХ ржирзИрждрж┐ржХрждрж╛', text: 'ржжрзИржиржирзНржжрж┐ржи ржирзИрждрж┐ржХрждрж╛ ржУ ржЖржЪрж░ржг тАФ рж╕рж╣ржЬ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛', url: window.location.href }) : alert('рж╢рзЗржпрж╝рж╛рж░ рж╕рж╛ржкрзЛрж░рзНржЯ ржирзЗржЗ')} className={buttonClass}>
                        <Users size={16} />
                        рж╢рзЗржпрж╝рж╛рж░
                    </button>
                </div>
            </header>

            <div className="grid md:grid-cols-3 gap-6">
                {/* Sidebar Navigation */}
                <nav className="md:col-span-1 p-3 bg-white rounded-lg shadow-inner border border-slate-100 print:hidden">
                    <ul className="space-y-1">
                        {sections.map(s => {
                            const Icon = s.icon;
                            return (
                                <li key={s.id}>
                                    <button
                                        onClick={() => setActive(s.id)}
                                        className={`w-full text-left p-3 rounded-lg flex items-center gap-2 ${active === s.id ? activeNavClass : inactiveNavClass}`}
                                        aria-current={active === s.id}
                                    >
                                        <Icon size={18} />
                                        <div className="font-medium cursor-pointer">{s.title}</div>
                                    </button>
                                </li>
                            );
                        })}
                    </ul>

                    <div className="mt-6 border-t pt-4">
                        <button onClick={() => { setQuizOpen(true); resetQuiz(); }} className="px-3 py-2 bg-green-500 text-white font-semibold rounded-md w-full hover:bg-green-600 transition duration-200 shadow-lg">
                            ржирзИрждрж┐ржХрждрж╛ ржХрзБржЗржЬ ЁЯза
                        </button>
                    </div>
                </nav>

                {/* Main Content Area */}
                <section className="md:col-span-2 bg-white p-6 rounded-lg shadow-xl min-h-[400px]">
                    <AnimatePresence mode="wait">
                        {/* Overview Section */}
                        {active === 'overview' && (
                            <motion.div key="overview" initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -8 }}>
                                <h2 className="text-xl font-semibold mb-3 border-b pb-1">рж╕рж╛рж░рж╛ржВрж╢</h2>
                                <p className="text-base text-slate-700 leading-relaxed mb-4">ржЗрж╕рж▓рж╛ржорж┐ржХ ржирзИрждрж┐ржХрждрж╛ ржиржХрж╢рж╛ ржХрж░рзЗ ржмрзНржпржХрзНрждрж┐ ржУ рж╕ржорж╛ржЬтАФржПржЯрж┐ ржХрзЗржмрж▓ ржзрж░рзНржорзАржпрж╝ ржЖржЪрж╛рж░ ржиржпрж╝, ржмрж░ржВ ржорж╛ржирзБрж╖рзЗрж░ рж╕ржЩрзНржЧрзЗ **ржирзНржпрж╛ржпрж╝ржкрж░рж╛ржпрж╝ржгрждрж╛, рж╕ржжржпрж╝ ржЖржЪрж░ржг ржУ ржжрж╛ржпрж╝рж┐рждрзНржмрж╢рзАрж▓рждрж╛рж░ ржкрзНрж░рждрж┐ржлрж▓ржи**ред ржирж┐ржЪрзЗ ржЖржорж░рж╛ ржкрзНрж░ржзрж╛ржи ржЧрзБржгрж╛ржмрж▓рзАржЧрзБрж▓рж┐рж░ ржПржХржЯрж┐ рж╕ржВржХрзНрж╖рж┐ржкрзНржд рж░рзВржкрж░рзЗржЦрж╛ ржжрж┐ржпрж╝рзЗржЫрж┐ред</p>

                                <div className="grid md:grid-cols-2 gap-3">
                                    {virtues.map(v => (
                                        <div key={v.id} className={`${contentBoxClass} border-l-4 border-blue-400`}>
                                            <div className="font-semibold text-lg text-blue-800">{v.name}</div>
                                            <div className="text-sm text-slate-600">{v.note}</div>
                                        </div>
                                    ))}
                                </div>
                            </motion.div>
                        )}

                        {/* Core Virtues Section */}
                        {active === 'core' && (
                            <motion.div key="core" initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -8 }}>
                                <h2 className="text-xl font-semibold mb-3 border-b pb-1">ржкрзНрж░ржзрж╛ржи ржирзИрждрж┐ржХ ржЧрзБржгрж╛ржмрж▓рзА</h2>
                                <ul className="list-disc pl-5 space-y-3 text-slate-700 text-base">
                                    <li>**рж╕рждрзНржпржирж┐рж╖рзНржарж╛ (рж╕рж┐ржжржХ):** ржкрзНрж░рждрж┐ржЬрзНржЮрж╛ рж░рж╛ржЦрзБржи, ржорж┐ржерзНржпрж╛ ржПржбрж╝рж╛ржи ржУ рж╕рзНржкрж╖рзНржЯрждрж╛ ржмржЬрж╛ржпрж╝ рж░рж╛ржЦрзБржиред ржПржЯрж┐ ржЗржорж╛ржирзЗрж░ ржнрж┐рждрзНрждрж┐ред</li>
                                    <li>**ржзрзИрж░рзНржп (рж╕ржмрж░):** ржХрж╖рзНржЯрзЗ ржзрзИрж░рзНржпрж╢рзАрж▓ рж╣ржУржпрж╝рж╛тАФржкрж░рзАржХрзНрж╖рж╛ржпрж╝ рж╕рзНржерж┐рждржкржХрзНрж╖рждрж╛ ржжрзЗржЦрж╛ржиред ржХржЦржирзЛржЗ ржЖрж╢рж╛ рж╣рж╛рж░рж╛ржмрзЗржи ржирж╛ред</li>
                                    <li>**ржХрзГрждржЬрзНржЮрждрж╛ (рж╢рзБржХрж░):** ржЫрзЛржЯрзЛ ржмржбрж╝рзЛ ржЕржирзБржЧрзНрж░рж╣рзЗрж░ ржЬржирзНржп ржХрзГрждржЬрзНржЮрждрж╛ ржкрзНрж░ржХрж╛рж╢ ржХрж░рзБржитАФржПржЯрж┐ рж╕ржорзНржкрж░рзНржХ рж╢ржХрзНржд ржХрж░рзЗ ржУ ржЖрж▓рзНрж▓рж╛рж╣'рж░ ржирзЗрзЯрж╛ржоржд ржмрзГржжрзНржзрж┐ ржХрж░рзЗред</li>
                                    <li>**ржжржпрж╝рж╛ (рж░рж╣ржо):** ржжрзБрж░рзНржмрж▓ ржУ ржЕржнрж╛ржмрзАржжрзЗрж░ ржкрзНрж░рждрж┐ рж╕рж╣рж╛ржирзБржнрзВрждрж┐рж╢рзАрж▓ рж╣рзЛржиред</li>
                                </ul>
                            </motion.div>
                        )}

                        {/* Daily Habits Section */}
                        {active === 'daily' && (
                            <motion.div key="daily" initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -8 }}>
                                <h2 className="text-xl font-semibold mb-3 border-b pb-1">ржжрзИржиржирзНржжрж┐ржи ржЕржнрзНржпрж╛рж╕</h2>
                                <ol className="list-decimal pl-5 space-y-3 text-slate-700 text-base">
                                    <li>**ржнрж╛рж▓рзЛ ржнрж╛рж╖рж╛ ржмрзНржпржмрж╣рж╛рж░:** ржЧрж╛рж▓рж┐-ржорж╛рждрж╛рж▓ ржУ ржЧрзАржмржд ржерзЗржХрзЗ ржмрж┐рж░ржд ржерж╛ржХрзБржиред ржЖржкржирж╛рж░ рж╢ржмрзНржж ржпрзЗржи ржЕржирзНржпржжрзЗрж░ рж╢рж╛ржирзНрждрж┐ ржжрзЗржпрж╝ред</li>
                                    <li>**рж╕ржоржпрж╝ржирж┐рж╖рзНржарж╛ (ржЖржорж╛ржиржд):** ржЖржкржирж╛рж░ рж╕ржоржпрж╝ржХрзЗ рж╕ржорзНржорж╛ржи ржХрж░рзБржи ржУ ржЕржирзНржпрзЗрж░ рж╕ржоржпрж╝рзЗрж░ ржорзВрж▓рзНржп ржжрж┐ржиред ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ ржжрж┐рж▓рзЗ рж╕ржоржпрж╝ржорждрзЛ рждрж╛ ржкрж╛рж▓ржи ржХрж░рзБржиред</li>
                                    <li>**рж╢рж┐рж╖рзНржЯрж╛ржЪрж╛рж░:** ржзржирзНржпржмрж╛ржж ржУ ржХрзНрж╖ржорж╛ ржЪрж╛ржУржпрж╝рж╛рж░ ржЕржнрзНржпрж╛рж╕ ржЧржбрж╝рзЗ рждрзБрж▓рзБржиред рж╕рж╛рж▓рж╛ржо ржжрзЗржУржпрж╝рж╛ ржУ ржЙрждрзНрждрж░ ржжрзЗржУржпрж╝рж╛ ржЬрж░рзБрж░рж┐ред</li>
                                    <li>**рж╕рждрзНржпржмрж╛ржжрж┐рждрж╛:** рж╕ржм ржкрж░рж┐рж╕рзНржерж┐рждрж┐рждрзЗ рж╕рждрзНржп ржХржерж╛ ржмрж▓рж╛рж░ рж╕рж╛рж╣рж╕ рж░рж╛ржЦрзБржиред</li>
                                </ol>
                            </motion.div>
                        )}

                        {/* Social Behavior Section */}
                        {active === 'social' && (
                            <motion.div key="social" initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -8 }}>
                                <h2 className="text-xl font-semibold mb-3 border-b pb-1">ржЖржирзНрждржГрж╕рж╛ржорж╛ржЬрж┐ржХ ржЖржЪрж░ржг</h2>
                                <div className="space-y-4 text-slate-700 text-base">
                                    <div className={contentBoxClass}>
                                        <h3 className="font-semibold text-lg mb-1">ржХрж░рзНржоржХрзНрж╖рзЗрждрзНрж░рзЗ рж╕рзОржЪрж░рзНржЪрж╛</h3>
                                        <p>ржЖржЗржирж┐ ржУ ржирзИрждрж┐ржХ рж╕рзАржорж╛ ржорзЗржирзЗ ржЪрж▓рзБржи; ржирзНржпрж╛ржпрзНржпрждрж╛ ржмржЬрж╛ржпрж╝ рж░рж╛ржЦрзБржиред ржирж┐ржЬрзЗрж░ ржХрж╛ржЬ рж╕ржорзНржкрзВрж░рзНржг рж╕рждрждрж╛рж░ рж╕рж╛ржерзЗ ржХрж░рзБржиред</p>
                                    </div>
                                    <div className={contentBoxClass}>
                                        <h3 className="font-semibold text-lg mb-1">ржкрж░рж┐ржмрж╛рж░рзЗ ржорж┐рждржнрж╛рж╖рж┐рждрж╛</h3>
                                        <p>рж╕ржирзНрждрж╛ржиржжрзЗрж░ ржХрж╛ржЫрзЗ ржирж┐ржЬрзЗржХрзЗ ржиржорзБржирж╛ рж╣рж┐рж╕рзЗржмрзЗ рж░рж╛ржЦрзБржитАФрж╢ржмрзНржж, ржЖржЪрж░ржг ржУ ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ ржЕржирзБржпрж╛ржпрж╝рзАред ржкрж░рж┐ржмрж╛рж░рзЗрж░ ржкрзНрж░рждрж┐ ржжржпрж╝рж╛рж▓рзБ рж╣рзЛржиред</p>
                                    </div>
                                </div>
                            </motion.div>
                        )}

                        {/* Parenting Section */}
                        {active === 'parenting' && (
                            <motion.div key="parenting" initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -8 }}>
                                <h2 className="text-xl font-semibold mb-3 border-b pb-1">рж╢рж┐рж╢рзБ ржУ рждрж░рзБржгржжрзЗрж░ ржирзИрждрж┐ржХ рж╢рж┐ржХрзНрж╖рж╛</h2>
                                <ul className="list-disc pl-5 space-y-3 text-slate-700 text-base">
                                    <li>**ржЙрзОрж╕рж╛рж╣ ржжрж┐ржи:** ржнрж╛рж▓рзЛ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп **ржкрзБрж░рж╕рзНржХрж╛рж░ ржУ ржкрзНрж░рж╢ржВрж╕рж╛** ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи (ржпрзЗржоржи, рж╣рж╛ржжрж┐рж╕ ржорзБржЦрж╕рзНрже ржХрж░рж╛)ред</li>
                                    <li>**ржЖржжрж░рзНрж╢ рждрзИрж░рж┐ ржХрж░рзБржи:** ржЖржкржирж╛рж░ ржХрж╛ржЬржЧрзБрж▓рзЛ рждрж╛ржжрзЗрж░ рж╕рж╛ржоржирзЗ ржХрж░рзЗ ржжрзЗржЦрж╛ржитАФржирзИрждрж┐ржХ рж╢рж┐ржХрзНрж╖рж╛ **ржХржерж╛ржпрж╝ ржиржпрж╝, ржХрж╛ржЬрзЗ**ред</li>
                                    <li>**ржорж╛рж▓рзНржЯрж┐ржорж┐ржбрж┐ржпрж╝рж╛ рж╕рзАржорж╛:** ржЗрж▓рзЗржХржЯрзНрж░ржирж┐ржХ ржЧрзНржпрж╛ржЬрзЗржЯ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрж░рзБржи ржПржмржВ ржкрж╛рж░рж┐ржмрж╛рж░рж┐ржХ ржХржерзЛржкржХржержи ржУ ржЖрж▓рзЛржЪржирж╛ ржмрж╛ржбрж╝рж╛ржиред</li>
                                </ul>
                            </motion.div>
                        )}

                        {/* Resources Section */}
                        {active === 'resources' && (
                            <motion.div key="resources" initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -8 }}>
                                <h2 className="text-xl font-semibold mb-3 border-b pb-1">рж╕ржВржХрж░ржг ржУ рж╕ржорзНржкржж</h2>
                                <div className="space-y-4 text-slate-700 text-base">
                                    <p>рж╕рзНржерж╛ржирзАржпрж╝ **ржЖрж▓рзЗржо/ржЗржорж╛ржоржжрзЗрж░ ржХрж╛ржЫ ржерзЗржХрзЗ ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХ ржирж┐рж░рзНржжрзЗрж╢ржирж╛** ржирж┐ржиред ржПржЫрж╛ржбрж╝рж╛ ржирж┐ржорзНржирж▓рж┐ржЦрж┐ржд ржзрж░ржирзЗрж░ ржЙржкржХрж░ржг ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи тАФ ржирзИрждрж┐ржХрждрж╛ ржирж┐ржпрж╝рзЗ ржЦржгрзНржбржЧрзНрж░ржирзНрже, ржкрзНрж░ржмржирзНржз, ржЕржбрж┐ржУ ржЯржХрж╕ ржПржмржВ ржкрж╛рж░рж┐ржмрж╛рж░рж┐ржХ ржХрж░рзНржорж╢рж╛рж▓рж╛ред</p>
                                    <div className="flex flex-wrap gap-3">
                                        <button onClick={() => window.open('https://example.com/ethics-books', '_blank')} className={buttonClass}>ржмржЗ рж╕ржВржЧрзНрж░рж╣</button>
                                        <button onClick={() => window.open('https://example.com/ethics-audio', '_blank')} className={buttonClass}>ржЕржбрж┐ржУ</button>
                                        <button onClick={() => window.open('https://example.com/ethics-video', '_blank')} className={buttonClass}>ржнрж┐ржбрж┐ржУ рж▓рзЗржХржЪрж╛рж░</button>
                                    </div>
                                </div>
                            </motion.div>
                        )}
                    </AnimatePresence>

                    {/* Footer actions */}
                    <div className="mt-8 pt-4 border-t flex flex-wrap gap-3 print:hidden">
                        <button onClick={() => alert('ржЖржкржирж┐ ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ ржПржЗ ржХржорзНржкрзЛржирзЗржирзНржЯржХрзЗ ржмрж╛ржВрж▓рж╛+ржЗржВрж░рзЗржЬрж┐ ржжрзБржЗржЯрж┐ ржХрж░рзЗ ржжрж┐рждрзЗ ржкрж╛рж░рж┐ред')} className={buttonClass.replace('py-1', 'py-2').replace('px-3', 'px-4')}>ржЕржирзБржмрж╛ржж ржмрж┐ржХрж▓рзНржк</button>
                        <button onClick={() => alert('ржбрзЗржорзЛ ржкрзЗржЬ ржмрж╛ржирж╛рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржмрж▓рзБржитАФI will create a small Next.js demo.')} className={buttonClass.replace('py-1', 'py-2').replace('px-3', 'px-4')}>ржбрзЗржорзЛ ржкрзЗржЬ ржжрзЗржЦрзБржи</button>
                    </div>
                </section>
            </div>

            {/* Quiz modal */}
            {quizOpen && (
                <div className="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50">
                    <div className="bg-white p-6 rounded-xl max-w-lg w-full shadow-2xl">
                        <div className="flex justify-between items-center mb-4 border-b pb-2">
                            <h3 className="text-xl font-bold">ржирзИрждрж┐ржХрждрж╛ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржХрзБржЗржЬ ЁЯза</h3>
                            <button onClick={() => { setQuizOpen(false); setScore(null); }} className="text-slate-400 hover:text-red-500 transition"><X size={24} /></button>
                        </div>

                        <div className="space-y-5">
                            {quizData.map((qItem, qIndex) => (
                                <div key={qIndex}>
                                    <div className="font-semibold mb-2 text-lg text-gray-800">{qItem.q}</div>
                                    <div className="space-y-2">
                                        {qItem.options.map((opt) => {
                                            const isSelected = answers[`q${qIndex + 1}`] === opt.id;
                                            const isCorrect = score !== null && opt.isCorrect;
                                            const isIncorrect = score !== null && isSelected && !opt.isCorrect;

                                            let style = `${quizButtonClass} w-full text-left`;
                                            if (isCorrect) {
                                                style += ' bg-green-100 border-green-500 text-green-700 font-medium';
                                            } else if (isIncorrect) {
                                                style += ' bg-red-100 border-red-500 text-red-700 font-medium';
                                            } else if (isSelected) {
                                                style += ' bg-blue-100 border-blue-500 text-blue-700 font-medium';
                                            } else {
                                                style += ' border-slate-300 hover:bg-slate-50';
                                            }

                                            return (
                                                <button
                                                    key={opt.id}
                                                    onClick={() => handleAnswer(qIndex, opt.id)}
                                                    disabled={score !== null}
                                                    className={style}
                                                >
                                                    {isCorrect && <CheckCircle size={16} className="inline mr-1" />}
                                                    {isIncorrect && <X size={16} className="inline mr-1" />}
                                                    {opt.id.toUpperCase()}) {opt.text}
                                                </button>
                                            );
                                        })}
                                    </div>
                                </div>
                            ))}
                        </div>

                        <div className="flex gap-3 mt-6 pt-4 border-t">
                            <button
                                onClick={submitQuiz}
                                disabled={score !== null}
                                className={`${quizButtonClass} bg-blue-500 text-white font-semibold hover:bg-blue-600 ${score !== null ? 'opacity-50 cursor-not-allowed' : ''}`}
                            >
                                рж╕рж╛ржмржорж┐ржЯ ржХрж░рзБржи
                            </button>
                            {score !== null && (
                                <button
                                    onClick={resetQuiz}
                                    className={`${quizButtonClass} bg-yellow-500 text-white font-semibold hover:bg-yellow-600`}
                                >
                                    ржХрзБржЗржЬ рж░рж┐рж╕рзЗржЯ
                                </button>
                            )}
                        </div>

                        {score !== null && (
                            <div className="mt-4 p-3 bg-blue-50 rounded-lg font-bold text-lg">
                                ржЖржкржирж╛рж░ рж╕рзНржХрзЛрж░: <span className="text-blue-700">{score}</span> / {quizData.length} ЁЯОЙ
                            </div>
                        )}
                    </div>
                </div>
            )}

            <footer className="text-xs text-slate-500 mt-4 p-2 text-center">
                **ржжрзНрж░рж╖рзНржЯржмрзНржп:** ржПржЗ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛ рж╕рж╛ржзрж╛рж░ржг ржЙржжрзНржжрзЗрж╢рзНржпрзЗтАФржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржзрж░рзНржорзАржпрж╝ ржмрж╛ ржЖржЗржирж┐ ржкрж░рж╛ржорж░рзНрж╢рзЗрж░ ржЬржирзНржп рж╕рзНржерж╛ржирзАржпрж╝ **ржЖрж▓рзЗржорзЗрж░ рж╕рж╛ржерзЗ ржкрж░рж╛ржорж░рзНрж╢** ржХрж░рзБржиред
            </footer>
        </div>
    );
}